plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // querydsl plugin
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'war'
}

group = 'infra.kdbc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // 로컬 jar 파일의 의존성 설정
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // SpringBoot starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // QueryDsl
    compile("com.querydsl:querydsl-jpa")
    compile("com.querydsl:querydsl-apt") // @DataJpaTest 용 in-memory DB

    // Oracle JDBC Driver
    runtimeOnly 'com.oracle.ojdbc:ojdbc8'
    testCompile('com.h2database:h2')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    configurations {
        all*.exclude module: 'spring-boot-starter-logging'
    }

}

test {
    useJUnitPlatform()
}

// querydsl 적용
apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs += file(querydslSrcDir)
            //srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

// gradle 5에서는 아래 내용 추가
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

idea {
    module {
        generatedSourceDirs += file(querydslSrcDir)
    }
}