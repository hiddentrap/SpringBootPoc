# 실행 프로파일 설정
# spring.profiles.active=

# Tomcat
server.port=9090

# Oracle settings
spring.datasource.driver.class=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@jaejoo.iptime.org:8070:XE
spring.datasource.username=book_ex
spring.datasource.password=book_ex
spring.datasource.sql-script-encoding=UTF-8
#spring.datasource.url=jdbc:oracle:thin:@172.16.1.23:1521:xe
#spring.datasource.username=hjj
#spring.datasource.password=hjj
## 데이터베이스 종류
spring.jpa.database=oracle
## 상세 버전
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect


# Hikari Connection pool
## 최소 유지 커넥션 수
spring.datasource.hikari.minimum-idle=5
## 최대 커넥션 수 = 사용중 + 유휴상태
spring.datasource.hikari.maximum-pool-size=10
## 커넥션 대기시간(밀리초), 초과시 익셉션
spring.datasource.hikari.connection-timeout=30000
## 커넥션 유휴대기 가능시간(밀리초)
spring.datasource.hikari.idle-timeout=30000
## 커넥션 풀 네임
spring.datasource.hikari.pool-name=SpringBootJPAHikariCP


# logging
## 컬러 출력
spring.output.ansi.enabled=always
## 로깅 디렉토리 설정 10MB 파일 롤링
logging.file.path=logs
## 패키지별 로그 레벨
#logging.level.infra.kdbc.SpringBootPoc=debug
#logging.level.org.hibernate.SQL=debug
## JPA 쿼리 포매팅 출력
spring.jpa.properties.hibernate.format_sql=true
### Select 결과 Trace 안함
logging.level.org.hibernate.type.descriptor.sql=trace
### logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
### Select 결과 Trace 함
#logging.level.org.hibernate.type=trace



# Hibernate
## 스키마 생성
### create: 기존 테이블 삭제 후 재생성, update: 변경 부분만 반영, validate: 매핑상태만 확인
### 개발시: create or update, 운영시: validate
spring.jpa.hibernate.ddl-auto=create
## AUTO, TABLE 및 SEQUENCE를 위해 하이버네이트의 새로운 IdentifierGenerator를 사용
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true